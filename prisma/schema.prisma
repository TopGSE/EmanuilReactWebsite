// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

// Contact form submissions
model ContactSubmission {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  phone     String?
  subject   String
  message   String
  language  String   @default("en")
  status    String   @default("new")
  createdAt DateTime @default(now())
  
  @@map("contact_submissions")
}

// Prayer requests
model PrayerRequest {
  id          Int      @id @default(autoincrement())
  name        String?
  email       String?
  phone       String?
  requestText String
  isAnonymous Boolean  @default(false)
  language    String   @default("en")
  status      String   @default("active")
  createdAt   DateTime @default(now())
  
  @@map("prayer_requests")
}

// Admin users table
model AdminUser {
  id                Int      @id @default(autoincrement())
  email             String   @unique
  passwordHash      String
  name              String?
  isActive          Boolean  @default(true)
  createdAt         DateTime @default(now())
  lastLoginAt       DateTime?
  
  @@map("admin_users")
}

// One-time registration tokens
model RegistrationToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  email     String
  isUsed    Boolean  @default(false)
  expiresAt DateTime
  createdAt DateTime @default(now())
  
  @@map("registration_tokens")
}
